/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Medusa API
 * OpenAPI spec version: 1.0.0
 */
import type { CustomerGroupInCustomerFilters } from './customerGroupInCustomerFilters';
import type { AdminGetCustomersIdOneOf } from './adminGetCustomersIdOneOf';
import type { AdminGetCustomersEmailOneOf } from './adminGetCustomersEmailOneOf';
import type { AdminGetCustomersCompanyNameOneOf } from './adminGetCustomersCompanyNameOneOf';
import type { AdminGetCustomersFirstNameOneOf } from './adminGetCustomersFirstNameOneOf';
import type { AdminGetCustomersLastNameOneOf } from './adminGetCustomersLastNameOneOf';
import type { AdminGetCustomersCreatedByOneOf } from './adminGetCustomersCreatedByOneOf';
import type { AdminGetCustomersCreatedAtAndItem } from './adminGetCustomersCreatedAtAndItem';
import type { AdminGetCustomersCreatedAtEq } from './adminGetCustomersCreatedAtEq';
import type { AdminGetCustomersCreatedAtNot } from './adminGetCustomersCreatedAtNot';
import type { AdminGetCustomersCreatedAtOrItem } from './adminGetCustomersCreatedAtOrItem';
import type { AdminGetCustomersUpdatedAtAndItem } from './adminGetCustomersUpdatedAtAndItem';
import type { AdminGetCustomersUpdatedAtEq } from './adminGetCustomersUpdatedAtEq';
import type { AdminGetCustomersUpdatedAtNot } from './adminGetCustomersUpdatedAtNot';
import type { AdminGetCustomersUpdatedAtOrItem } from './adminGetCustomersUpdatedAtOrItem';
import type { AdminGetCustomersDeletedAtAndItem } from './adminGetCustomersDeletedAtAndItem';
import type { AdminGetCustomersDeletedAtEq } from './adminGetCustomersDeletedAtEq';
import type { AdminGetCustomersDeletedAtNot } from './adminGetCustomersDeletedAtNot';
import type { AdminGetCustomersDeletedAtOrItem } from './adminGetCustomersDeletedAtOrItem';
import type { AdminGetCustomersAndItem } from './adminGetCustomersAndItem';
import type { AdminGetCustomersOrItem } from './adminGetCustomersOrItem';

export type AdminGetCustomersParams = {
/**
 * Comma-separated fields that should be included in the returned data. if a field is prefixed with `+` it will be added to the default fields, using `-` will remove it from the default fields. without prefix it will replace the entire default fields. NOTE: This route doesn't allow expanding custom relations.
 */
fields?: string;
/**
 * The number of items to skip when retrieving a list.
 */
offset?: number;
/**
 * Limit the number of items returned in the list.
 */
limit?: number;
/**
 * The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`.
 */
order?: string;
groups?: string | CustomerGroupInCustomerFilters | string[];
/**
 * Search term to filter the customer's searchable properties by.
 */
q?: string;
id?: string | string[] | AdminGetCustomersIdOneOf;
email?: string | string[] | AdminGetCustomersEmailOneOf;
company_name?: string | string[] | AdminGetCustomersCompanyNameOneOf;
first_name?: string | string[] | AdminGetCustomersFirstNameOneOf;
last_name?: string | string[] | AdminGetCustomersLastNameOneOf;
created_by?: string | string[] | AdminGetCustomersCreatedByOneOf;
/**
 * Filter by the customer's creation date.
 */
created_at?: {
  /** Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters. */
  $and?: AdminGetCustomersCreatedAtAndItem[];
  /** Filter arrays that contain all values of this parameter. */
  $contained?: string[];
  /** Filter arrays that contain some of the values of this parameter. */
  $contains?: string[];
  $eq?: AdminGetCustomersCreatedAtEq;
  /** Filter by whether a value for this parameter exists (not `null`). */
  $exists?: boolean;
  /** Filter to apply on full-text properties. */
  $fulltext?: string;
  /** Filter by values greater than this parameter. Useful for numbers and dates only. */
  $gt?: string;
  /** Filter by values greater than or equal to this parameter. Useful for numbers and dates only. */
  $gte?: string;
  /** Apply a case-insensitive `like` filter. Useful for strings only. */
  $ilike?: string;
  /** Filter by values in this array. */
  $in?: string[];
  /** Apply a `like` filter. Useful for strings only. */
  $like?: string;
  /** Filter by values less than this parameter. Useful for numbers and dates only. */
  $lt?: string;
  /** Filter by values less than or equal to this parameter. Useful for numbers and dates only. */
  $lte?: string;
  /** Filter by values not equal to this parameter. */
  $ne?: string;
  /** Filter by values not in this array. */
  $nin?: string[];
  $not?: AdminGetCustomersCreatedAtNot;
  /** Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters. */
  $or?: AdminGetCustomersCreatedAtOrItem[];
  /** Filter arrays that have overlapping values with this parameter. */
  $overlap?: string[];
  /** Apply a regex filter. Useful for strings only. */
  $re?: string;
};
/**
 * Filter by a customer's update date.
 */
updated_at?: {
  /** Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters. */
  $and?: AdminGetCustomersUpdatedAtAndItem[];
  /** Filter arrays that contain all values of this parameter. */
  $contained?: string[];
  /** Filter arrays that contain some of the values of this parameter. */
  $contains?: string[];
  $eq?: AdminGetCustomersUpdatedAtEq;
  /** Filter by whether a value for this parameter exists (not `null`). */
  $exists?: boolean;
  /** Filter to apply on full-text properties. */
  $fulltext?: string;
  /** Filter by values greater than this parameter. Useful for numbers and dates only. */
  $gt?: string;
  /** Filter by values greater than or equal to this parameter. Useful for numbers and dates only. */
  $gte?: string;
  /** Apply a case-insensitive `like` filter. Useful for strings only. */
  $ilike?: string;
  /** Filter by values in this array. */
  $in?: string[];
  /** Apply a `like` filter. Useful for strings only. */
  $like?: string;
  /** Filter by values less than this parameter. Useful for numbers and dates only. */
  $lt?: string;
  /** Filter by values less than or equal to this parameter. Useful for numbers and dates only. */
  $lte?: string;
  /** Filter by values not equal to this parameter. */
  $ne?: string;
  /** Filter by values not in this array. */
  $nin?: string[];
  $not?: AdminGetCustomersUpdatedAtNot;
  /** Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters. */
  $or?: AdminGetCustomersUpdatedAtOrItem[];
  /** Filter arrays that have overlapping values with this parameter. */
  $overlap?: string[];
  /** Apply a regex filter. Useful for strings only. */
  $re?: string;
};
/**
 * Filter a customer by their deletion date.
 */
deleted_at?: {
  /** Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters. */
  $and?: AdminGetCustomersDeletedAtAndItem[];
  /** Filter arrays that contain all values of this parameter. */
  $contained?: string[];
  /** Filter arrays that contain some of the values of this parameter. */
  $contains?: string[];
  $eq?: AdminGetCustomersDeletedAtEq;
  /** Filter by whether a value for this parameter exists (not `null`). */
  $exists?: boolean;
  /** Filter to apply on full-text properties. */
  $fulltext?: string;
  /** Filter by values greater than this parameter. Useful for numbers and dates only. */
  $gt?: string;
  /** Filter by values greater than or equal to this parameter. Useful for numbers and dates only. */
  $gte?: string;
  /** Apply a case-insensitive `like` filter. Useful for strings only. */
  $ilike?: string;
  /** Filter by values in this array. */
  $in?: string[];
  /** Apply a `like` filter. Useful for strings only. */
  $like?: string;
  /** Filter by values less than this parameter. Useful for numbers and dates only. */
  $lt?: string;
  /** Filter by values less than or equal to this parameter. Useful for numbers and dates only. */
  $lte?: string;
  /** Filter by values not equal to this parameter. */
  $ne?: string;
  /** Filter by values not in this array. */
  $nin?: string[];
  $not?: AdminGetCustomersDeletedAtNot;
  /** Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters. */
  $or?: AdminGetCustomersDeletedAtOrItem[];
  /** Filter arrays that have overlapping values with this parameter. */
  $overlap?: string[];
  /** Apply a regex filter. Useful for strings only. */
  $re?: string;
};
/**
 * Join query parameters with an AND condition. Each object's content is the same type as the expected query parameters.
 */
$and?: AdminGetCustomersAndItem[];
/**
 * Join query parameters with an OR condition. Each object's content is the same type as the expected query parameters.
 */
$or?: AdminGetCustomersOrItem[];
/**
 * Filter by whether the customer is registered.
 */
has_account?: boolean;
};
