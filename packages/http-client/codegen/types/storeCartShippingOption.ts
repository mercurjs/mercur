/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Medusa API
 * OpenAPI spec version: 1.0.0
 */
import type { StoreCalculatedPrice } from './storeCalculatedPrice';
import type { StoreCartShippingOptionData } from './storeCartShippingOptionData';
import type { StoreCartShippingOptionPriceType } from './storeCartShippingOptionPriceType';
import type { StorePrice } from './storePrice';
import type { StoreCartShippingOptionProvider } from './storeCartShippingOptionProvider';
import type { StoreCartShippingOptionType } from './storeCartShippingOptionType';

/**
 * The shipping option's details.
 */
export interface StoreCartShippingOption {
  /** The shipping option's amount. */
  amount: number;
  calculated_price: StoreCalculatedPrice;
  /** The shipping option's data, useful for the provider handling fulfillment. */
  data: StoreCartShippingOptionData;
  /** The shipping option's ID. */
  id: string;
  /** The shipping option's name. */
  name: string;
  /** The shipping option's price type. If it's `flat`, the price is fixed and is set in the `prices` property. If it's `calculated`, the price is calculated on checkout by the associated fulfillment provider. */
  price_type: StoreCartShippingOptionPriceType;
  /** The shipping option's prices. */
  prices: StorePrice[];
  /** The fulfillment provider's details. */
  provider: StoreCartShippingOptionProvider;
  /** The ID of the fulfillment provider handling this option. */
  provider_id: string;
  /** The ID of the service zone the shipping option belongs to. */
  service_zone_id: string;
  /** The ID of the associated shipping profile. */
  shipping_profile_id: string;
  /** The shipping option type's details. */
  type: StoreCartShippingOptionType;
}
